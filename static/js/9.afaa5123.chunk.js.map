{"version":3,"sources":["components/FormComponents/FormContainer.js","components/FormComponents/Form.js","components/FormComponents/Input.js","components/FormComponents/PrimaryButton.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","components/HeaderMUI/PageHeaderMUI.js","views/RegisterView.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","_props$align","align","classes","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","concat","capitalize","withStyles","typography","caption","button","overline","srOnly","position","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","fontSize","textShadow","PageHeader","title","RegisterView","dispatch","useDispatch","useForm","register","handleSubmit","onSubmit","data","authOperations","autoComplete","label"],"mappings":"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","file":"static/js/9.afaa5123.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 'auto',\n  },\n}));\n\nconst FormContainer = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Container\n      className={styles.root}\n      component=\"main\"\n      maxWidth=\"xs\"\n      {...props}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Form = ({ children, ...props }) => {\n  const styles = useStyles();\n  return (\n    <form className={styles.root} noValidate {...props}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import { TextField } from '@material-ui/core';\nimport React, { forwardRef } from 'react';\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      color=\"secondary\"\n      {...props}\n    />\n  );\n});\nexport default Input;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #FE4B8B 30%, #FF8E53 90%)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n  },\n}));\n\nconst PrimaryButton = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      className={styles.root}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    textAlign: 'center',\n    fontSize: '38px',\n    color: '#faa346',\n    textShadow: '1px 1px #9c5203',\n  },\n}));\nconst PageHeader = props => {\n  const { title } = props;\n  const styles = useStyles();\n  return (\n    <Typography className={styles.root} variant=\"h1\">\n      {title}\n    </Typography>\n  );\n};\n\nexport default PageHeader;\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { useForm } from 'react-hook-form';\nimport FormContainer from '../components/FormComponents/FormContainer';\nimport Form from '../components/FormComponents/Form';\nimport Input from '../components/FormComponents/Input';\nimport PrimaryButton from '../components/FormComponents/PrimaryButton';\nimport PageHeader from '../components/HeaderMUI/PageHeaderMUI';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n\n  const handleFormSubmit = data => {\n    dispatch(authOperations.register(data));\n  };\n\n  return (\n    <FormContainer>\n      <PageHeader title=\"Welcome\" />\n\n      <Form onSubmit={handleSubmit(handleFormSubmit)} autoComplete=\"off\">\n        <Input type=\"text\" name=\"name\" label=\"Name\" ref={register} />\n\n        <Input type=\"email\" name=\"email\" label=\"Email\" ref={register} />\n\n        <Input\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          ref={register}\n        />\n\n        <PrimaryButton type=\"submit\">Sign Up</PrimaryButton>\n      </Form>\n    </FormContainer>\n  );\n}\n"],"sourceRoot":""}