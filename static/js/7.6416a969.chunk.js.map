{"version":3,"sources":["components/FormComponents/FormContainer.js","components/FormComponents/Form.js","components/FormComponents/Input.js","components/FormComponents/PrimaryButton.js","components/ContactList/ContactList.module.css","views/App.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","module","exports","schema","yup","shape","name","matches","required","number","min","ContactForm","dispatch","useDispatch","contacts","useSelector","contactsSelectors","getContacts","useState","setNumber","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","e","find","contact","alert","contactsOperations","addContact","target","reset","label","error","helperText","message","inputMode","autoComplete","customInput","format","mask","value","onChange","currentTarget","startIcon","ContactList","useEffect","fetchContacts","getVisibleContacts","s","list","map","id","listItemText","Button","onClick","deleteContact","onDeleteContact","Filter","getFilter","InputBase","startAdornment","fontSize","placeholder","contactsActions","ContactsView","container","main_header","contacts_header"],"mappings":"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","file":"static/js/7.6416a969.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 'auto',\n  },\n}));\n\nconst FormContainer = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Container\n      className={styles.root}\n      component=\"main\"\n      maxWidth=\"xs\"\n      {...props}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Form = ({ children, ...props }) => {\n  const styles = useStyles();\n  return (\n    <form className={styles.root} noValidate {...props}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import { TextField } from '@material-ui/core';\nimport React, { forwardRef } from 'react';\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      color=\"secondary\"\n      {...props}\n    />\n  );\n});\nexport default Input;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #FE4B8B 30%, #FF8E53 90%)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n  },\n}));\n\nconst PrimaryButton = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      className={styles.root}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list___5BGm\",\"listItem\":\"ContactList_listItem__2Pbv7\",\"listItemText\":\"ContactList_listItemText__3asnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__JUBz-\",\"main_header\":\"App_main_header__2P_qT\",\"contacts_header\":\"App_contacts_header__3yMPi\"};","import FormContainer from '../FormComponents/FormContainer';\nimport { useState } from 'react';\nimport Form from '../FormComponents/Form';\nimport Input from '../FormComponents/Input';\nimport PrimaryButton from '../FormComponents/PrimaryButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { contactsSelectors } from 'redux/contacts';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport NumberFormat from 'react-number-format';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^([^0-9]*)$/, 'Name should not contain numbers')\n    .required('First name is a required field'),\n  number: yup.string().min(19).required('Phone number is a required field'),\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setNumber(value);\n  };\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema),\n  });\n\n  const handleFormSubmit = (data, e) => {\n    if (contacts.find(contact => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(data.name, data.number));\n    e.target.reset();\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          error={!!errors.name}\n          helperText={errors?.name?.message}\n          ref={register}\n        />\n        <NumberFormat\n          type=\"text\"\n          name=\"number\"\n          label=\"Phone number\"\n          inputMode=\"numeric\"\n          autoComplete=\"tel\"\n          error={!!errors.number}\n          helperText={errors?.number?.message}\n          inputRef={register}\n          customInput={Input}\n          format=\"+38 (###) ### ## ##\"\n          mask=\"_\"\n          value={number}\n          onChange={handleChange}\n        />\n        <PrimaryButton startIcon={<PersonAddIcon />} type=\"submit\" reset>\n          Add contact\n        </PrimaryButton>\n      </Form>\n    </FormContainer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { contactsSelectors } from 'redux/contacts';\nimport { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1, 0, 1),\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n  },\n}));\n\nexport default function ContactList() {\n  const styles = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n    // eslint-disable-next-line\n  }, []);\n\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <span className={s.listItemText}>{name}:</span>\n          <span className={s.listItemText}>{number}</span>\n          <Button\n            className={styles.root}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport * as contactsActions from 'redux/contacts';\nimport InputBase from '@material-ui/core/InputBase';\nimport PropTypes from 'prop-types';\nimport FormContainer from '../FormComponents/FormContainer';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Filter = () => {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FormContainer>\n      <InputBase\n        startAdornment={<SearchIcon fontSize=\"small\" color=\"secondary\" />}\n        placeholder=\"search your contacts\"\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </FormContainer>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport s from './App.module.css';\n\nexport default function ContactsView() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.main_header}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={s.contacts_header}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}